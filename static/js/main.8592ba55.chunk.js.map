{"version":3,"sources":["constants/BazaarCategory.tsx","services/BazaarService.tsx","config/cart-context.tsx","components/Bazaar/Bazaar.tsx","components/BazaarCart/BazaarCart.tsx","config/cart-context-provider.tsx","components/Slider/Slider.tsx","pages/Bazaar.tsx","pages/Home.tsx","services/KnowledgeCenterService.tsx","components/KnowledgeContent/KnowledgeContent.tsx","components/TableOfContents/TableOfContents.tsx","pages/KnowledgeCenter.tsx","assets/img/star_marker.png","components/ThirdHorizonMap/SytemDetail.tsx","utils/firebase.tsx","services/ThirdHorizonMapService.tsx","components/ThirdHorizonMap/ThirdHorizonMap.tsx","services/GeneratePersonService.tsx","components/QuoteGenerator/QuoteGenerator.tsx","components/NameGenerator/NameGenerator.tsx","pages/Tools.tsx","config/routes.ts","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["BazaarCategory","getBazaarInventory","category","require","filter","item","BazaarCategories","id","EVERYDAY_ITEMS","title","MEDICURGICAL_TECHNOLOGY","TOOLS_REPAIRS","SURVIVAL_COLONIZATION","EXOS_VEHICLES","RECON_INFILTRATION","WEAPON_GEAR_COMBAT","CartContext","createContext","cart","setCart","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","primary","main","StyledTableCell","TableCell","tableCellClasses","head","color","common","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","Bazaar","props","find","categoryId","useState","bazaarInventory","setBazaarInventory","error","setError","useEffect","BazaarService","Row","effects","row","open","setOpen","quantity","setQuantity","useContext","name","cost","bonusEffects","map","effect","weight","techTier","Grid","container","spacing","style","display","alignContent","justifyContent","alignItems","xs","TextField","label","type","InputLabelProps","shrink","variant","onChange","e","target","value","Button","onClick","quantityTotal","total","cartItem","newCart","handleAddItem","align","IconButton","size","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","sx","margin","Typography","gutterBottom","description","inventoryList","useMemo","TableContainer","component","Paper","Table","width","TableBody","BazaarCart","cartFormat","setCartFormat","newCartFormat","forEach","quantItem","itemId","totalQuantity","reduce","a","b","totalCost","push","itemName","gridFlexAlign","ml","existingItem","length","handleChangeQuantity","Divider","fullWidth","CartContextProvider","children","Provider","Slider","sliderTitle","useTheme","position","right","zIndex","Zoom","enter","exit","Avatar","float","SimCard","Card","minWidth","maxWidth","marginLeft","marginRight","Diamond","CardContent","BazaarPage","HomePage","getSectionData","dataId","getTableOfContents","KnowledgeContent","undefined","data","setData","setTimeout","KnowledgeCenterService","Fade","flexDirection","alignSelf","subTitle","content","TableOfContents","selectSection","tree","setTree","createTree","TreeItem","nodeId","childItem","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeSelect","event","nodeIds","height","flexGrow","overflowY","KnowledgeCenterPage","setDataId","marginTop","borderRight","selectedDataId","SystemDetail","systemDetails","setSystemDetails","system","planetCount","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getSystemDetails","systemId","collection","doc","get","then","getSystems","docs","DefaultIcon","L","icon","iconSize","iconUrl","icon2","Marker","prototype","options","bounds","LatLngBounds","MyComponent","useMapEvent","console","log","latlng","ThirdHorizonMap","selectedSystem","setSelectedSystem","systems","setSystems","ThirdHorizonMapService","Container","MapContainer","center","zoom","scrollWheelZoom","TileLayer","url","process","index","lat_long","latitude","longitude","eventHandlers","click","Popup","MapConsumer","setMaxZoom","setMinZoom","setMaxBounds","getNames","gender","req","fetch","response","json","res","firstName","results","first","lastName","last","getRandomQuote","qouteList","Math","floor","random","QuoteGenerator","randomQuote","setRandomQuote","ApiService","CardActions","NameGenerator","generatedName","setGeneratedName","GeneratePersonService","person","routes","path","exact","Header","AppBar","Toolbar","Link","to","App","className","fixed","basename","route","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","secondary","red","A400","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.8592ba55.chunk.js","sourcesContent":["export enum BazaarCategory {\r\n\tEVERYDAY_ITEMS,\r\n\tMEDICURGICAL_TECHNOLOGY,\r\n\tTOOLS_REPAIRS,\r\n\tSURVIVAL_COLONIZATION,\r\n\tEXOS_VEHICLES,\r\n\tRECON_INFILTRATION,\r\n\tWEAPON_GEAR_COMBAT\r\n}\r\n\r\nexport interface IBazaarCategory {\r\n\tid: BazaarCategory,\r\n\ttitle: string\r\n}\r\n\r\nexport const BazaarCategories: IBazaarCategory[] = [\r\n\t{\r\n\t\tid: BazaarCategory.EVERYDAY_ITEMS,\r\n\t\ttitle: \"Everyday Items\"\r\n\t},\r\n\t{\r\n\t\tid: BazaarCategory.MEDICURGICAL_TECHNOLOGY,\r\n\t\ttitle: \"Medicurgical Technology\"\r\n\t},\r\n\t{\r\n\t\tid: BazaarCategory.TOOLS_REPAIRS,\r\n\t\ttitle: \"Tools & Repairs\"\r\n\t},\r\n\t{\r\n\t\tid: BazaarCategory.SURVIVAL_COLONIZATION,\r\n\t\ttitle: \"Survival & Colonization\"\r\n\t},\r\n\t{\r\n\t\tid: BazaarCategory.EXOS_VEHICLES,\r\n\t\ttitle: \"Exos & Vehicles\"\r\n\t},\r\n\t{\r\n\t\tid: BazaarCategory.RECON_INFILTRATION,\r\n\t\ttitle: \"Recon & Infiltration\"\r\n\t},\r\n\t{\r\n\t\tid: BazaarCategory.WEAPON_GEAR_COMBAT,\r\n\t\ttitle: \"Weapon Gear & Combat\"\r\n\t},\t\r\n]","import { BazaarCategory } from \"../constants/BazaarCategory\";\r\nimport { IBazaarItemDisplay } from \"../interfaces/bazaar-item\";\r\n\r\nclass BazaarService {\r\n\tgetBazaarInventory = (category: BazaarCategory): IBazaarItemDisplay[] => {\r\n\t\tlet inventory = require('../json/everyday-items.json') as IBazaarItemDisplay[];\r\n\t\treturn inventory.filter((item) => item.category === category);\r\n\t}\r\n}\r\n\r\nexport default new BazaarService;","import React, { createContext } from \"react\";\r\nimport { IBazaarCartItem } from \"../interfaces/bazaar-item\";\r\n\r\nexport const CartContext = createContext({\r\n\tcart: [] as IBazaarCartItem[],\r\n\tsetCart: (cart: IBazaarCartItem[]) => {}\r\n});\r\n","import React, { ChangeEvent, FC, useContext, useEffect, useMemo, useState } from 'react';\r\nimport BazaarService from '../../services/BazaarService';\r\nimport './Bazaar.scss';\r\nimport { Box, Button, Collapse, Grid, IconButton, Paper, styled, Table, TableBody, TableCell, tableHeadClasses, tableCellClasses, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { BazaarCategories, BazaarCategory, IBazaarCategory } from '../../constants/BazaarCategory';\r\nimport { CartContext } from '../../config/cart-context';\r\nimport { IBazaarCartItem, IBazaarItemDisplay } from '../../interfaces/bazaar-item';\r\n\r\ninterface IBazaarProps {\r\n  categoryId: BazaarCategory\r\n}\r\ninterface IRowProps {\r\n  row: IBazaarItemDisplay\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  \r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.primary,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14\r\n  }\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst Bazaar: FC<IBazaarProps> = (props) => {\r\n  const category: IBazaarCategory | undefined = BazaarCategories.find((item) => item.id === props.categoryId);\r\n  const [bazaarInventory, setBazaarInventory] = useState<IBazaarItemDisplay[]>([]);\r\n  const [error, setError] = useState<string>('');\r\n  useEffect(() => {\r\n    if(category) {\r\n      setBazaarInventory(BazaarService.getBazaarInventory(category.id));\r\n    } else {\r\n      setError('Error: Category does not exist.');\r\n    }\r\n  }, []);\r\n\r\n  const Row = (props: IRowProps) => {\r\n    const {row} = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const {cart, setCart} = useContext(CartContext);\r\n    const renderBonusEffects = (effects: string[]) => {\r\n      effects = effects || [];\r\n      return (\r\n        <ul> \r\n          {effects.map((effect) => \r\n            <li key={effect}>\r\n              {effect}\r\n            </li>\r\n          )}\r\n        </ul>\r\n      )\r\n    }\r\n    const handleAddItem = (item: IBazaarItemDisplay) => {\r\n      const quantityTotal = {\r\n        quantity: quantity,\r\n        total: 0\r\n      } as IBazaarCartItem\r\n      const cartItem: IBazaarCartItem = {...item, ...quantityTotal};\r\n      let newCart = [...cart, cartItem];\r\n      //  TODO setting context rerendors page    \r\n      setCart(newCart);\r\n      setQuantity(0);\r\n    }\r\n    const handleChangeQuantity = (e: ChangeEvent<HTMLInputElement>) => {\r\n      setQuantity(+e.target.value);\r\n    }\r\n    const quantityAddButtonStyle = {\r\n      display: \"flex\",\r\n      alignContent: \"center\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"      \r\n    }\r\n    return (\r\n      <>\r\n        <StyledTableRow>         \r\n          <StyledTableCell>{row.name}</StyledTableCell>\r\n          <StyledTableCell>{row.cost}</StyledTableCell>\r\n          <StyledTableCell>{renderBonusEffects(row.bonusEffects)}</StyledTableCell>\r\n          <StyledTableCell>{row.weight}</StyledTableCell>\r\n          <StyledTableCell>{row.techTier}</StyledTableCell>\r\n          <StyledTableCell>\r\n            <Grid container spacing={1} style={quantityAddButtonStyle}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  id={`quantity-${row.id}`}\r\n                  label=\"Quantity\"\r\n                  type=\"number\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChangeQuantity}\r\n                  value={quantity}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => handleAddItem(row)}>Add</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </StyledTableCell>\r\n          <StyledTableCell align='right'>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setOpen(!open)}\r\n            >\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </StyledTableCell>           \r\n        </StyledTableRow>\r\n        <StyledTableRow>\r\n          <StyledTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box sx={{ margin: 1 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom >\r\n                  Description\r\n                </Typography>\r\n                {row.description}\r\n              </Box>\r\n            </Collapse>\r\n          </StyledTableCell>\r\n        </StyledTableRow>    \r\n      </>\r\n    )\r\n  }\r\n\r\nconst inventoryList = useMemo(() => bazaarInventory.map((item) => (\r\n  <Row key={item.id} row={item}></Row>\r\n)), [bazaarInventory])\r\nreturn (\r\n  !error ?   \r\n    (\r\n      <>\r\n        <Typography color=\"white\" variant=\"h6\">\r\n          {category?.title}\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <StyledTableHead>\r\n              <TableRow>\r\n                <StyledTableCell width=\"15%\">Name</StyledTableCell>\r\n                <StyledTableCell width=\"5%\">Cost</StyledTableCell>\r\n                <StyledTableCell width=\"40%\">Bonus Effects</StyledTableCell>\r\n                <StyledTableCell width=\"5%\">Weight</StyledTableCell>\r\n                <StyledTableCell width=\"10%\">Tech Tier</StyledTableCell>\r\n                <StyledTableCell width=\"20%\">Quantity</StyledTableCell>\r\n                <StyledTableCell width=\"5%\"/>\r\n              </TableRow>\r\n            </StyledTableHead>\r\n            <TableBody>\r\n              {inventoryList}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </>\r\n    ) : (\r\n      // TODO create error component\r\n      <div>{error}</div>\r\n    )\r\n  )\r\n};\r\n\r\nexport default Bazaar;\r\n","import { Box, Button, Divider, Grid, TextField, Typography } from '@mui/material';\r\nimport React, { ChangeEvent, FC, useContext, useEffect, useState } from 'react';\r\nimport { CartContext } from '../../config/cart-context';\r\nimport { IBazaarCartItem } from '../../interfaces/bazaar-item';\r\nimport './BazaarCart.scss';\r\ninterface BazaarCartProps {}\r\ninterface ICart {\r\n  itemId: number,\r\n  quantity: number,\r\n  itemName: string,\r\n  total: number\r\n}\r\n\r\nconst BazaarCart: FC<BazaarCartProps> = () => {\r\n  const [cartFormat, setCartFormat] = useState<ICart[]>([]);\r\n  const {cart, setCart} = useContext(CartContext)\r\n  useEffect(() => {\r\n    let newCartFormat: ICart[] = [];\r\n    cart.forEach((item) => {\r\n      const t = newCartFormat.find((quantItem) => quantItem.itemId === item.id);\r\n      if(!t) {\r\n        const itemsInCart = cart.filter((quantItem) => quantItem.id === item.id);\r\n        const totalQuantity = itemsInCart.map((item) => item.quantity).reduce((a, b) => a + b);\r\n        const totalCost = item.cost * totalQuantity;\r\n        newCartFormat.push({\r\n          itemId: item.id,\r\n          quantity: totalQuantity,\r\n          itemName: item.name,\r\n          total: totalCost\r\n        } as ICart)\r\n      }\r\n    })\r\n    setCartFormat(newCartFormat);\r\n  }, [cart]);\r\n\r\n  const handleChangeQuantity = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, itemId: number) => {\r\n    let existingItem = cart.filter((item) => item.id === itemId)[0];\r\n    if(existingItem) {\r\n      existingItem.quantity = +e.target.value;\r\n      let newCart: IBazaarCartItem[] = [];\r\n      if(existingItem.quantity <= 0) {\r\n        //  Remove item from cart\r\n        newCart = cart.filter((item) => item.id !== itemId);\r\n      } else {\r\n        cart.forEach((item) => {\r\n          if(item.id === existingItem.id) {\r\n            if(newCart.filter((cartItem) => cartItem.id === existingItem.id).length < 1) {\r\n              newCart.push(existingItem);\r\n            }\r\n          } else {\r\n            newCart.push(item);\r\n          }\r\n        })\r\n        \r\n      }\r\n      setCart(newCart)\r\n    }\r\n  }\r\n  const gridFlexAlign = {\r\n    display: 'flex',\r\n    alignItems: 'flex-end'\r\n  }\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\" gutterBottom component={'div'}>\r\n        {cartFormat.map(item => \r\n          <Grid key={item.itemId} container spacing={1} style={gridFlexAlign}>\r\n            <Grid item xs={6}>\r\n              {item.itemName}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n                x\r\n                <TextField\r\n                  id={`totalItemQuantity-${item.itemId}`}\r\n                  value={item.quantity}\r\n                  label=\"\"\r\n                  type=\"number\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"standard\"\r\n                  margin='dense'\r\n                  sx={{ml: 1}}\r\n                  onChange={(e) => handleChangeQuantity(e, item.itemId)}\r\n                />\r\n              </Box>\r\n            </Grid>        \r\n            <Grid item xs={3}>\r\n              <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                {item.total}\r\n              </Box>\r\n            </Grid>            \r\n          </Grid>\r\n        )}        \r\n      </Typography>\r\n      <Typography variant=\"h6\">\r\n        <Divider/>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n              Total:\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              {cartFormat.map((item) => item.total).reduce((a, b) => a + b, 0)}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Typography>      \r\n      <Button fullWidth variant=\"contained\" color=\"secondary\">Checkout</Button>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default BazaarCart;\r\n","import React, { FC, useState } from \"react\";\r\nimport { IBazaarCartItem } from \"../interfaces/bazaar-item\";\r\nimport { CartContext } from \"./cart-context\";\r\n\r\nconst CartContextProvider: FC = ({ children }) => {\r\n\tconst [cart, setCart] = useState<IBazaarCartItem[]>([]);\r\n\treturn (\r\n\t\t<CartContext.Provider value={{ cart, setCart }}>\r\n\t\t\t{children}\r\n\t\t</CartContext.Provider>\r\n\t)\t\r\n}\r\n\r\nexport default CartContextProvider;","\r\nimport { Diamond, SimCard, Storefront } from '@mui/icons-material';\r\nimport { Avatar, Box, Card, CardContent, IconButton, Theme, Zoom } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles'\r\nimport React, { FC, useState } from 'react';\r\nimport './Slider.scss';\r\n\r\ninterface ISliderProps {\r\n  sliderTitle: string\r\n}\r\n\r\n// const useStyles = makeStyles((theme: Theme) => ({\r\n//   cartIcon: {\r\n//     backgroundColor: theme.palette.secondary\r\n//   }\r\n// }));\r\n\r\nconst Slider: FC<ISliderProps> = ({children, sliderTitle}) => {\r\n  const [open, setOpen] = useState(false);\r\n  //const classes = useStyles();\r\n  const theme = useTheme() as any;\r\n  const style = {\r\n    minWidth: 275,\r\n    maxWidth: 275\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ \r\n      position: 'fixed',\r\n      right: '0px',\r\n      zIndex: '9999',\r\n      width: 'auto'\r\n    }}>\r\n      <Zoom in={!open} timeout={{enter: 500, exit: 200}}>\r\n        <Avatar variant=\"rounded\" sx={{float: 'right', right: '0px', position: 'fixed'}} >\r\n          <IconButton\r\n            size=\"large\"\r\n            color=\"secondary\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            <SimCard/>\r\n          </IconButton>\r\n        </Avatar>\r\n      </Zoom>\r\n      <Zoom in={open} timeout={{enter: 200, exit: 200}}>\r\n        <Card sx={{ \r\n          minWidth: style.minWidth, \r\n          maxWidth: style.maxWidth,\r\n          display: open ? 'block' : 'none'\r\n        }}>\r\n          <Zoom in={open} timeout={{enter: 600, exit: 0}}>\r\n            <IconButton\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                marginLeft: 'auto', \r\n                marginRight: 'auto'\r\n              }}\r\n              onClick={() => setOpen(!open)}\r\n            >\r\n              <Diamond/>\r\n              {sliderTitle}\r\n              <Diamond/>\r\n            </IconButton>\r\n          </Zoom>\r\n          <CardContent>\r\n            {children}\r\n          </CardContent>\r\n        </Card>\r\n      </Zoom>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Slider;\r\n","import { Grid } from \"@mui/material\";\r\nimport IPage from \"../interfaces/page\";\r\nimport Bazaar from \"../components/Bazaar/Bazaar\";\r\nimport { BazaarCategory } from \"../constants/BazaarCategory\";\r\nimport BazaarCart from \"../components/BazaarCart/BazaarCart\";\r\nimport CartContextProvider from \"../config/cart-context-provider\";\r\nimport Slider from \"../components/Slider/Slider\";\r\n\r\nconst BazaarPage: React.FunctionComponent<IPage> = props => {\r\n\t\r\n\treturn (\r\n\t\t<CartContextProvider>\r\n\t\t\t<Slider sliderTitle=\"Bazaar Cart\">\r\n\t\t\t\t<BazaarCart></BazaarCart>\t\r\n\t\t\t</Slider>\r\n\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t<Grid item xs={12}>\t\t\t\t\r\n\t\t\t\t\t<Bazaar categoryId={BazaarCategory.EVERYDAY_ITEMS}></Bazaar>\r\n\t\t\t\t\t<Bazaar categoryId={BazaarCategory.MEDICURGICAL_TECHNOLOGY}></Bazaar>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</CartContextProvider>\r\n\t)\r\n}\r\n\r\nexport default BazaarPage;","import { useEffect } from \"react\";\r\nimport IPage from \"../interfaces/page\";\r\n\r\n\r\nconst HomePage: React.FunctionComponent<IPage> = props => {\r\n\tuseEffect(() => {\r\n\t\t\r\n\t}, [])\r\n\treturn (\r\n\t\t<p>This is the home page</p>\r\n\t)\r\n}\r\n\r\nexport default HomePage;","import { IKnowledgeItem } from \"../interfaces/knowledge-item\";\r\nimport { IKnowledgeTreeItem } from \"../interfaces/knowledge-tree\";\r\n\r\nclass KnowledgeCenterService {\r\n\tgetSectionData = (dataId: number): IKnowledgeItem | undefined => {\r\n\t\tlet knowledge = require('../json/knowledge-items.json') as IKnowledgeItem[];\r\n\t\treturn knowledge.find((item) => item.dataId === dataId);\r\n\t}\r\n\tgetTableOfContents = (): IKnowledgeTreeItem[] => {\r\n\t\tlet tree = require('../json/knowledge-tree-items.json') as IKnowledgeTreeItem[];\r\n\t\treturn tree;\r\n\t}\r\n}\r\n\r\nexport default new KnowledgeCenterService;","import { Box, Container, Fade, Typography } from '@mui/material';\nimport React, { FC, useEffect, useState } from 'react';\nimport { IKnowledgeItem } from '../../interfaces/knowledge-item';\nimport KnowledgeCenterService from '../../services/KnowledgeCenterService';\nimport './KnowledgeContent.scss';\n\ninterface KnowledgeContentProps {\n  dataId: number\n}\n\nconst KnowledgeContent: FC<KnowledgeContentProps> = ({dataId}) => {\n  const [data, setData] = useState<IKnowledgeItem | undefined>(undefined);\n  const [open, setOpen] = useState<boolean>(false);\n  useEffect(() => {\n    setOpen(false);\n    setTimeout(() => {\n      setData(KnowledgeCenterService.getSectionData(dataId));\n      setOpen(true)\n    }, 200);\n  }, [dataId]);\n  \n  return (\n    <Fade in={open} timeout={{enter: 500, exit: 200}}>\n      <Box display={'flex'} flexDirection={'column'}>\n          <Typography variant=\"h3\" component=\"div\" sx={{alignSelf: 'center'}}>\n            {data?.title}\n          </Typography>\n          <Typography \n            variant=\"subtitle1\" \n            component=\"div\" \n            sx={{alignSelf: 'center'}} \n            gutterBottom\n          >\n            {data?.subTitle}\n          </Typography>\n          <Typography variant=\"body1\" component=\"div\">\n            {data?.content}\n          </Typography>  \n      </Box>\n    </Fade>\n  )\n}\n\nexport default KnowledgeContent;\n","import React, { FC, SyntheticEvent, useEffect, useState } from 'react';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport './TableOfContents.scss';\nimport { TreeItem, TreeView } from '@mui/lab';\nimport { IKnowledgeTreeItem } from '../../interfaces/knowledge-tree';\nimport KnowledgeCenterService from '../../services/KnowledgeCenterService';\n\ninterface TableOfContentsProps {\n  selectSection: (selectedDataId: number) => void\n}\n\nconst TableOfContents: FC<TableOfContentsProps> = ({selectSection}) => {\n  const [tree, setTree] = useState<IKnowledgeTreeItem[]>();\n  useEffect(() => {\n    setTree(KnowledgeCenterService.getTableOfContents());\n  }, []);\n  const handleSectionSelection = (event: SyntheticEvent<Element, Event>, nodeIds: string) => {\n    selectSection(+nodeIds);\n  }\n\n  const createTree = (item: IKnowledgeTreeItem) => {\n    return (\n      <TreeItem key={item.id} nodeId={item.id} label={item.name}>\n        {item.children \n          ? item.children.map((childItem) =>createTree(childItem)) \n          : null}\n      </TreeItem>\n    )\n  }\n\n  return (\n    <TreeView\n      aria-label=\"Knowledge Center navigator\"\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      onNodeSelect={handleSectionSelection}\n      sx={{ height: 240, flexGrow: 1, maxWidth: 400, overflowY: 'auto' }}\n    >\n      {tree?.map((item) => (\n        createTree(item)\n      ))}\n    </TreeView>\n  )\n};\n\nexport default TableOfContents;\n","import { Grid, Paper } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport KnowledgeContent from \"../components/KnowledgeContent/KnowledgeContent\";\r\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\r\nimport { BazaarCategory } from \"../constants/BazaarCategory\";\r\nimport IPage from \"../interfaces/page\";\r\nimport Bazaar from \"./Bazaar\";\r\n\r\n\r\nconst KnowledgeCenterPage: React.FunctionComponent<IPage> = props => {\r\n\tconst [dataId, setDataId] = useState<number>(0);\r\n\tconst selectSection = (selectedDataId: number) => {\r\n\t\tsetDataId(selectedDataId);\r\n\t}\r\n\treturn (\r\n\t\t<Grid container xs={12} spacing={1} component={Paper} sx={{marginLeft: 0, marginTop: 0}}>\r\n\t\t\t<Grid item xs={3} sx={{borderRight: 'grey solid 1px'}}>\t\t\t\t\r\n\t\t\t\t<TableOfContents selectSection={selectSection}></TableOfContents>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={9}>\t\t\t\t\r\n\t\t\t\t<KnowledgeContent dataId={dataId}></KnowledgeContent>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default KnowledgeCenterPage;","export default __webpack_public_path__ + \"static/media/star_marker.0d2f81f4.png\";","import { Card, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ISystemDetail from \"../../interfaces/system-detail\";\r\n\r\ninterface SystemDetailProps {\r\n\tsystem?: ISystemDetail\r\n}\r\n\r\nexport default function SystemDetail(props: SystemDetailProps) {\r\n\tconst [systemDetails, setSystemDetails] = useState<ISystemDetail>();\r\n\tuseEffect(() => {\r\n\t\tsetSystemDetails(props.system);\r\n\t}, [props.system])\r\n\treturn (\r\n\t\t<Card sx={{ minWidth: 275 }}>\r\n\t\t<CardContent>\r\n\t\t  <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n\t\t\tSystem Information\r\n\t\t  </Typography>\r\n\t\t  <Typography component={'span'} variant=\"body2\">\r\n\t\t\t<Grid container spacing={12}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\tName: {systemDetails?.name}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\tPlanet Count: {systemDetails?.planetCount}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\t\t  \r\n\t\t  </Typography>\r\n\t\t</CardContent>\r\n\t  </Card>\r\n\t)\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTspdBxs-o9ojlzvBGqd2Z6CjtYViHtHU\",\r\n  authDomain: \"coriolis-companion.firebaseapp.com\",\r\n  projectId: \"coriolis-companion\",\r\n  storageBucket: \"coriolis-companion.appspot.com\",\r\n  messagingSenderId: \"822472227525\",\r\n  appId: \"1:822472227525:web:cef77815cf94284b3a0eac\",\r\n  measurementId: \"G-26XHGZ6X3X\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\nexport default firebase;","import { db } from \"../utils/firebase\"\r\n\r\nexport default new class ThirdHorizonMapService {\r\n\tgetSystemDetails = async (systemId: string): Promise<any> => {\r\n\t\treturn db.collection('Systems').doc(systemId).get().then((data) => {\r\n\t\t\treturn data.data();\r\n\t\t});\r\n\t}\r\n\tgetSystems = async (): Promise<any> => {\r\n\t\treturn db.collection('Systems').get().then((data) => {\r\n\t\t\treturn data.docs.map((doc: any) => doc.data())\r\n\t\t});\r\n\t}\t\r\n}","import { MapConsumer, MapContainer, Marker, Popup, TileLayer, useMapEvent } from \"react-leaflet\";\r\nimport './ThirdHorizonMap.scss';\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L, { LatLngBounds } from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport icon2 from '../../assets/img/star_marker.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport { Box, Container, Grid } from \"@mui/material\";\r\nimport SystemDetail from \"./SytemDetail\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ISystemDetail from \"../../interfaces/system-detail\";\r\nimport ThirdHorizonMapService from \"../../services/ThirdHorizonMapService\";\r\n\r\nlet DefaultIcon = L.icon({\r\n\ticonSize: [15, 15],\r\n\t//iconAnchor: [10, 41],\r\n\t//popupAnchor: [2, -40],\r\n\ticonUrl: icon2,\r\n\t//shadowUrl: iconShadow\r\n  });\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\nconst bounds = new LatLngBounds([52, -153], [83,0])\r\n//\tMyComponent is used for testing purposes of finding locations on custom map\r\nfunction MyComponent() {\r\n\tconst map = useMapEvent('click', (e) => {\r\n\t  console.log(e.latlng)\r\n\t})\r\n\treturn null\r\n  }\r\n\r\nexport default function ThirdHorizonMap() {\r\n\t\r\n\tconst [selectedSystem, setSelectedSystem] = useState<ISystemDetail>();\r\n\tconst [systems, setSystems] = useState<[ISystemDetail]>();\r\n\r\n\tuseEffect(() => {\r\n\t\tThirdHorizonMapService.getSystems().then((data: [ISystemDetail]) => {\r\n\t\t\tsetSystems(data);\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container id=\"mapid\">\r\n\t\t\t\t<MapContainer center={[74, -83]} bounds={bounds} zoom={3} scrollWheelZoom={true}>\t\t\t\t\r\n\t\t\t\t\t<TileLayer url={process.env.PUBLIC_URL + \"/assets/maptiles/{z}-{x}-{y}.jpg\"}/>\r\n\t\t\t\t\t<MyComponent></MyComponent>\r\n\t\t\t\t\t{systems?.map((system, index) => \r\n\t\t\t\t\t\t<Marker \r\n\t\t\t\t\t\t\tkey={`marker-${index}`} \r\n\t\t\t\t\t\t\tposition={[system.lat_long.latitude, system.lat_long.longitude]}\r\n\t\t\t\t\t\t\teventHandlers={{\r\n\t\t\t\t\t\t\t\tclick: (e) => {\r\n\t\t\t\t\t\t\t\t\tsetSelectedSystem(system);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Popup>\r\n\t\t\t\t\t\t\t\t<span>A pretty CSS3 popup. <br/> Easily customizable.</span>\r\n\t\t\t\t\t\t\t</Popup>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t)}\t\t\t\t\t\t\t\r\n\t\t\t\t\t<MapConsumer>\r\n\t\t\t\t\t\t{(map) => {\r\n\t\t\t\t\t\t\tmap.setMaxZoom(5);\r\n\t\t\t\t\t\t\tmap.setMinZoom(3);\r\n\t\t\t\t\t\t\tmap.setMaxBounds(bounds)\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t</MapConsumer>\t\t\t\t\r\n\t\t\t\t</MapContainer>\r\n\t\t\t</Container>\r\n\t\t\t<Container>\r\n\t\t\t\t<SystemDetail system={selectedSystem}></SystemDetail>\r\n\t\t\t</Container>\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n","import IGeneratedPerson from \"../interfaces/generated-person\";\r\n\r\n//const BASE_API_URL = `https://api.parser.name/?api_key=e59ae224c978620463a78afb1a2a386e&endpoint=generate&`;\r\nconst BASE_API_URL = `https://randomuser.me/api/`;\r\nconst headers = {\r\n\t//authorization: `Bearer ${token}`,\r\n\t'Allow-Access-Control-Origin': '*'\r\n}\r\n\r\nclass GeneratePersonService {\r\n\r\n\tgetNames = async (gender: 'm' | 'f'): Promise<IGeneratedPerson> => {\r\n\t\t//\tTODO randomize the country code for middle east contries\r\n\t\t//return fetch(`${BASE_API_URL}country_code=AF&gender=${gender}`, {mode: \"no-cors\"})\r\n\t\tconst req = fetch(`${BASE_API_URL}?nat=TR&gender=${gender === 'm' ? 'male' : 'female'}`);\r\n\t\tconst response = await req;\r\n\t\treturn response.json().then(res => {\r\n\t\t\tconst firstName = res.results[0].name.first;\r\n\t\t\tconst lastName = res.results[0].name.last;\r\n\t\t\treturn { firstName: firstName, lastName: lastName };\r\n\t\t});\r\n\t}\r\n\r\n\tgetRandomQuote = (): string => {\r\n\t\t//\tTODO api to get random qoute\r\n\t\tconst qouteList = [\r\n\t\t\t\"That which cannot be seen follows you.\",\r\n\t\t\t\"Arrash... please!\",\r\n\t\t\t\"This isn't any ordinary accelerator pistol.\"\r\n\t\t  ];\r\n\t\t  \r\n\t\treturn qouteList[Math.floor(Math.random()*qouteList.length)];\r\n\t}\r\n}\r\n\r\nexport default new GeneratePersonService;","import { Button, Card, CardActions, CardContent, Typography } from '@mui/material';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport ApiService from '../../services/GeneratePersonService';\r\nimport './QuoteGenerator.scss';\r\n\r\ninterface QuoteGeneratorProps {\r\n  color?: string\r\n}\r\n\r\nexport default function QuoteGenerator(props: QuoteGeneratorProps) {\r\n  const [randomQuote, setRandomQuote] = useState<string|undefined>('')\r\n\r\n  useEffect(() => {\r\n    setRandomQuote(ApiService.getRandomQuote());\r\n  }, [])\r\n\r\n  const handleGetQuote = () => {\r\n    setRandomQuote(ApiService.getRandomQuote());\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          Quote of the Day\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          {randomQuote}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button variant=\"contained\" onClick={handleGetQuote}>Generate Quote</Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import { Card, CardContent, Typography, CardActions, Button } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport IGeneratedPerson from '../../interfaces/generated-person';\nimport GeneratePersonService from '../../services/GeneratePersonService';\nimport './NameGenerator.scss';\n\nexport default function NameGenerator() {\n\n  const [generatedName, setGeneratedName] = useState<string>('')\n\n  useEffect(() => {\n\t\tGeneratePersonService.getNames(\"m\").then((person: IGeneratedPerson) => {\n\t\t\tsetGeneratedName(`${person.firstName} ${person.lastName}`);\n\t\t});\n  }, [])\n\n  const handleGetName = () => {\n    GeneratePersonService.getNames(\"m\").then((person: IGeneratedPerson) => {\n\t\t\tsetGeneratedName(`${person.firstName} ${person.lastName}`);\n\t\t});\n  }  \n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n    <CardContent>\n      <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n        Generated Name\n      </Typography>\n      <Typography variant=\"body2\">\n        {generatedName}\n      </Typography>\n    </CardContent>\n    <CardActions>\n      <Button variant=\"contained\" onClick={handleGetName}>Generate Name</Button>\n    </CardActions>\n  </Card>\n  )\n}\n","import { Grid } from \"@mui/material\";\r\nimport ThirdHorizonMap from \"../components/ThirdHorizonMap/ThirdHorizonMap\";\r\nimport QuoteGenerator from \"../components/QuoteGenerator/QuoteGenerator\";\r\nimport IPage from \"../interfaces/page\";\r\nimport NameGenerator from \"../components/NameGenerator/NameGenerator\";\r\n\r\n\r\nconst ToolsPage: React.FunctionComponent<IPage> = props => {\r\n\treturn (\t\r\n\t\t<Grid container spacing={1}>\r\n\t\t\t<Grid item xs={6}>\r\n\t\t\t\t<NameGenerator></NameGenerator>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={6}>\r\n\t\t\t\t<QuoteGenerator></QuoteGenerator>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<ThirdHorizonMap></ThirdHorizonMap>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default ToolsPage;","import IRoute from \"../interfaces/route\";\r\nimport BazaarPage from \"../pages/Bazaar\";\r\nimport HomePage from \"../pages/Home\";\r\nimport KnowledgeCenterPage from \"../pages/KnowledgeCenter\";\r\nimport ToolsPage from \"../pages/Tools\";\r\n\r\nconst routes: IRoute[] = [\r\n\t{\r\n\t\tpath: '/',\r\n\t\tname: 'Home Page',\r\n\t\tcomponent: HomePage,\r\n\t\texact: true\r\n\t},\r\n\t{\r\n\t\tpath: '/tools',\r\n\t\tname: 'Tools Page',\r\n\t\tcomponent: ToolsPage,\r\n\t\texact: true\r\n\t},\t\r\n\t{\r\n\t\tpath: '/bazaar',\r\n\t\tname: 'Bazaar Page',\r\n\t\tcomponent: BazaarPage,\r\n\t\texact: true\r\n\t},\r\n\t{\r\n\t\tpath: '/knowledge-center',\r\n\t\tname: 'Knowledge Center Page',\r\n\t\tcomponent: KnowledgeCenterPage,\r\n\t\texact: true\r\n\t}\t\r\n]\r\n\r\nexport default routes;","import { Box, AppBar, Toolbar, IconButton, Typography, Button } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\n\nconst Header = () => (\n  <Box sx={{ flexGrow: 1 }}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          Coriolis Companion\n        </Typography>\n        <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\n        <Button color=\"inherit\" component={Link} to=\"/tools\">Tools</Button>\n        <Button color=\"inherit\" component={Link} to=\"/bazaar\">Bazaar</Button>\n        <Button color=\"inherit\" component={Link} to=\"/knowledge-center\">Knowledge Center</Button>\n      </Toolbar>\n    </AppBar>\n  </Box>\n);\n\nexport default Header;\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Route, RouteComponentProps, Switch } from 'react-router-dom'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport routes from './config/routes';\r\nimport Header from './components/Header/Header';\r\nimport { Box, Container, Typography } from '@mui/material';\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n  }, [])\r\n  //document.body.classList.add('stars');\r\n  return (\r\n    <>\r\n      <div className=\"stars\"></div>\r\n      <div className=\"twinkling\"></div>\r\n      <div className=\"clouds\"></div>\r\n      <Container fixed sx={{zIndex: 10, position: 'relative'}}>\r\n        <BrowserRouter basename=\"/Coriolis_Companion\">\r\n          <Header></Header>\r\n          <Switch>\r\n            {routes.map((route, index) => {\r\n              return (\r\n                <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  render={(props: RouteComponentProps<any>) => (\r\n                    <route.component\r\n                      name={route.name}\r\n                      {...props}\r\n                      {...route.props}\r\n                    />\r\n                  )}\r\n                />\r\n              )\r\n            })}\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\r\nimport { red } from '@mui/material/colors';\r\n\r\n// A custom theme for this app\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#334B48',\r\n    },\r\n    secondary: {\r\n      main: '#19857B',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n//  https://mycolor.space/?hex=%2319857B&sub=1\r\n//  #19857B #334B48 #96B1AC #5778AC #8DACE3","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport theme from './theme';\r\nimport { CssBaseline, ThemeProvider } from '@mui/material';\r\nimport firebase from './utils/firebase';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}